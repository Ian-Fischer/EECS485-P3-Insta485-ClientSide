#!/bin/bash
# insta485db

# stop on errors, print commands
set -Eeuo pipefail
set -x

usage() {
    echo "Usage: $0 (create|destory|reset|dump)"
}

if [ $# -ne 1 ]; then
    usage
    exit
fi 

# Parse argument. $1 is the first argument
case $1 in 
    "create")
        if [ -f "var/insta485.sqlite3" ]
        then
            echo "Error: database already exists."
        else
            mkdir -p var/uploads
            sqlite3 var/insta485.sqlite3 < sql/schema.sql
            sqlite3 var/insta485.sqlite3 < sql/data.sql
            cp sql/uploads/* var/uploads/
        fi
        ;;

    "destroy")
        rm -rf var/insta485.sqlite3 var/uploads
        ;;
    
    "reset")
        rm -rf var/insta485.sqlite3 var/uploads
        mkdir -p var/uploads
        sqlite3 var/insta485.sqlite3 < sql/schema.sql
        sqlite3 var/insta485.sqlite3 < sql/data.sql
        cp sql/uploads/* var/uploads/
        ;;
    
    "dump")
        if [ ! -f "var/insta485.sqlite3" ]
        then
            echo "Error: database does not exist."
        else
            sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM comments'
            sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM following'
            sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM likes'
            sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM posts'
            sqlite3 -batch -line var/insta485.sqlite3 'SELECT * FROM users'
        fi
        ;;
    *)
        usage
        exit 1
        ;;
esac